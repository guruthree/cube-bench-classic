#include <iostream.h>#include <math.h>#include "vectormath2.h"void print_vector(Vector3 v){	cout << v.x << " " << v.y << " " << v.z << "\n";}#define XRESOLUTION 300#define YRESOLUTION 300void main(){	Vector3 a = {1, 1, 1}, b = {2, 2, 2}, c;	float size = 20;	float xangle = 45, yangle = 60, zangle = 30;//	Vector3 cube[8];	Vector3 cube[8] = {		{-size/2, -size/2,  size/2},		{ size/2, -size/2,  size/2},		{ size/2,  size/2,  size/2},		{-size/2,  size/2,  size/2},		{-size/2, -size/2, -size/2},		{ size/2, -size/2, -size/2},		{ size/2,  size/2, -size/2},		{-size/2,  size/2, -size/2}	};	int i;	Matrix3 rot = Matrix3::getRotationMatrix(xangle, yangle, zangle);	Vector3 centre = {0, 0, 0};	Vector3 rotated_cube[8];		for (i = 0; i < 8; i++)	{//		cube[i] = {1.0f, 1.0f, 1.0f};//		cout << i << endl;//		cube[i].x = i;//		cube[i].y = i;//		cube[i].z = i;		rotated_cube[i] = rot.preMultiply(cube[i]);		rotated_cube[i] = rotated_cube[i].add(centre);		rotated_cube[i] = rotated_cube[i].scale(40.0f / (-rotated_cube[i].z/2.0f + 40.0f));		rotated_cube[i].x = rotated_cube[i].x + XRESOLUTION/2;		rotated_cube[i].y = rotated_cube[i].y + YRESOLUTION/2;	}	//	print_vector(cube[0]);//	print_vector(cube[1]);	//	cube[2] = cube[0].add(cube[7]);//	print_vector(cube[2]);	for (i = 0; i < 8; i++)	{		print_vector(cube[i]);		print_vector(rotated_cube[i]);	}	cout << "Hello World!\n";}